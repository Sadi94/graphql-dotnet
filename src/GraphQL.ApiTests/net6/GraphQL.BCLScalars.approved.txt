namespace GraphQL
{
    public static class SchemaExtensions
    {
        public static TSchema RegisterBCLScalars<TSchema>(this TSchema schema)
            where TSchema : GraphQL.Types.ISchema { }
    }
}
namespace GraphQL.Types
{
    public class BigIntGraphType : GraphQL.Types.ScalarGraphType
    {
        public BigIntGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class ByteGraphType : GraphQL.Types.ScalarGraphType
    {
        public ByteGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class DateGraphType : GraphQL.Types.ScalarGraphType
    {
        public DateGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class DateOnlyGraphType : GraphQL.Types.ScalarGraphType
    {
        public DateOnlyGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class DateTimeGraphType : GraphQL.Types.ScalarGraphType
    {
        public DateTimeGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class DateTimeOffsetGraphType : GraphQL.Types.ScalarGraphType
    {
        public DateTimeOffsetGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class DecimalGraphType : GraphQL.Types.ScalarGraphType
    {
        public DecimalGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class GuidGraphType : GraphQL.Types.ScalarGraphType
    {
        public GuidGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override bool CanParseValue(object? value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class LongGraphType : GraphQL.Types.ScalarGraphType
    {
        public LongGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class SByteGraphType : GraphQL.Types.ScalarGraphType
    {
        public SByteGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class ShortGraphType : GraphQL.Types.ScalarGraphType
    {
        public ShortGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class TimeOnlyGraphType : GraphQL.Types.ScalarGraphType
    {
        public TimeOnlyGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class TimeSpanMillisecondsGraphType : GraphQL.Types.ScalarGraphType
    {
        public TimeSpanMillisecondsGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class TimeSpanSecondsGraphType : GraphQL.Types.ScalarGraphType
    {
        public TimeSpanSecondsGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
    public class UIntGraphType : GraphQL.Types.ScalarGraphType
    {
        public UIntGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class ULongGraphType : GraphQL.Types.ScalarGraphType
    {
        public ULongGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class UShortGraphType : GraphQL.Types.ScalarGraphType
    {
        public UShortGraphType() { }
        public override bool CanParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
    }
    public class UriGraphType : GraphQL.Types.ScalarGraphType
    {
        public UriGraphType() { }
        public override object? ParseLiteral(GraphQLParser.AST.GraphQLValue value) { }
        public override object? ParseValue(object? value) { }
        public override object? Serialize(object? value) { }
    }
}
